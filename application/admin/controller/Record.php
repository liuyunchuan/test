<?php
namespace app\index\controller;

/*预约记录类*/
class Record extends Base
{
	/*所有记录*/
	public function allRecord()
	{
        $map['id'] = [ '>', 0 ];
        if( session('id') != 0)
        {
            $map['token'] = session('token');
        }
		// 获取数据
        $allRecordres =db( 'record' )->where( $map )->order( 'id asc' )->paginate( 10 );
        // 把数据传递给模板文件
        $this->assign( 'allRecordres', $allRecordres );
        $this->assign( 'type', 'allRecord' );
        // 渲染模板文件
    	return $this->fetch();
	}

	/*访客预约记录*/
	public function visitorRecord()
	{
        $map['id'] = [ '>', 0 ];
        $map['visittype'] = 0;
        if( session('id') != 0 )
        {
            $map['token'] = session('token');
        }
		// 获取数据
        $allRecordres = db( 'record' )->where( $map )->order( 'id asc' )->paginate( 10 );
        // 把数据传递给模板文件
        $this->assign( 'allRecordres', $allRecordres );
        $this->assign( 'type', 'visitorRecord' );
        // 渲染模板文件
    	return $this->fetch();
	}

	/*员工邀请记录*/
	public function employeeRecord()
	{
        $map['id'] = [ '>', 0 ];
        $map['visittype'] = 1;
        if( session('id') != 0 )
        {
            $map['token'] = session('token');
        }
		// 获取数据
        $allRecordres = db( 'record' )->where( $map )->order( 'id asc' )->paginate( 10 );
        // 把数据传递给模板文件
        $this->assign( 'allRecordres', $allRecordres );
        $this->assign( 'type', 'employeeRecord' );
        // 渲染模板文件
    	return $this->fetch();
	}

	/*删除预约记录*/
	public function recordDel()
	{
		// 这里缺少对传递的数据进行验证
        $id[] = input('post.id/a');
        if( !empty( $id[0] ) )
        {
            // 批量删除
            for( $i=0 ; $i<count($id[0]) ; $i++)
            {
                $data   = ["id" => $id[0][$i]];
                $dels[] = db( 'record' )->delete( $data );
            }
            print_r($dels);
        } else {
            // 单独删除
            $data   = [ 'id'=>input('id') ];
            $dels[] = db( 'record' )->delete( $data );
            if( $dels )
            {
                $this->success( '删除预约记录成功');
            } else {
                $this->error( '删除预约记录失败' );
            }
        }
        
	}

	/*清空所有记录*/
	public function recordDelAll()
	{
        $type = input('type');
        if( $type == 'allRecord' )
        {
            // 清空所有的预约记录，不用做处理
        } elseif ( $type == 'visitorRecord' ){
            // 清空访客预约记录
            $map['visittype'] = 0;
        } elseif ( $type == 'employeeRecord' ){
            // 清空员工邀请记录
            $map['visittype'] = 1;
        } else {
            // 非法参数，终止接口请求，返回提示
        }
		$map['id'] = ['>' , 1];
        // 判断是否是系统管理员
        if( session('id') != 0 )
        {
            // 不是系统管理员
            $map['token'] = session('token');
        }
        // 查询所有满足条件的id
        $delid = db('record')->where($map)->column('id');
        // 进行删除操作
        $dels  = db('record')->delete($delid);
        // 返回操作结果
        print_r($dels);
	}


	/*导出选定记录*/
	public function recordExport()
	{
        // 引入库文件
        \think\Loader::import('Excel.PHPExcel');
        \think\Loader::import('Excel.PHPExcel.IOFactory');
        
        $id[] = input('post.id/a');
        // print_r($id);die;
        for($i=0 ; $i<count($id[0]) ; $i++)
        {
            $epl[] = db('record')->where('id',$id[0][$i])->find();
        }
        // print_r($epl);die;
        // 拼接文件名
        $fileName = "visitorRecord".date("Ymd-His",time()).".xls";


        $objExcel = new \PHPExcel();  // 创建一个处理对象实例
        // 创建文件格式写入对象实例, uncomment
        $objWriter = new \PHPExcel_Writer_Excel5($objExcel);   // 用于其他版本格式

        //*************************************
        //设置文档基本属性
        $objProps = $objExcel->getProperties();
        $objProps->setCreator("Zeal Li");
        $objProps->setLastModifiedBy("Zeal Li");
        $objProps->setTitle("Office XLS Test Document");
        $objProps->setSubject("Office XLS Test Document, Demo");
        $objProps->setDescription("Test document, generated by PHPExcel.");
        $objProps->setKeywords("office excel PHPExcel");
        $objProps->setCategory("Test");

        //*************************************
        //设置当前的sheet索引，用于后续的内容操作。
        //一般只有在使用多个sheet的时候才需要显示调用。
        //缺省情况下，PHPExcel会自动创建第一个sheet被设置SheetIndex=0

        $objExcel->setActiveSheetIndex(0);
        $objActSheet = $objExcel->getActiveSheet();

        //设置当前活动sheet的名称
        $objActSheet->setTitle("预约记录");

        //设置单元格首格内容
        $objActSheet->setCellValue('A1','所在公司');
        $objActSheet->setCellValue('B1','约见地址');
        $objActSheet->setCellValue('C1','访客姓名');
        $objActSheet->setCellValue('D1','员工姓名');
        $objActSheet->setCellValue('E1','来访人数');
        $objActSheet->setCellValue('F1','约见开始时间');
        $objActSheet->setCellValue('G1','约见截止时间');
        $objActSheet->setCellValue('H1','记录类型');
        $objActSheet->setCellValue('I1','约见事由');
        $objActSheet->setCellValue('J1','车牌号码');

        //  遍历访客信息数组，将数据存入对应的excel文件的每个单元格
        for($i = 0; $i < count($epl); $i++)
        {
            $objExcel->getActiveSheet()->setCellValueExplicit('A'.($i+2),$epl[$i]['company']);
            $objExcel->getActiveSheet()->setCellValueExplicit('B'.($i+2),$epl[$i]['place']);
            $objExcel->getActiveSheet()->setCellValueExplicit('C'.($i+2),$epl[$i]['name']);
            $objExcel->getActiveSheet()->setCellValueExplicit('D'.($i+2),$epl[$i]['ename']);
            $objExcel->getActiveSheet()->setCellValueExplicit('E'.($i+2),$epl[$i]['accompanying']);
            $objExcel->getActiveSheet()->setCellValueExplicit('F'.($i+2),$epl[$i]['appointment']);
            $objExcel->getActiveSheet()->setCellValueExplicit('G'.($i+2),$epl[$i]['appointment_end']);
            $objExcel->getActiveSheet()->setCellValueExplicit('H'.($i+2),$epl[$i]['visitortype']);
            $objExcel->getActiveSheet()->setCellValueExplicit('I'.($i+2),$epl[$i]['account']);
            $objExcel->getActiveSheet()->setCellValueExplicit('J'.($i+2),$epl[$i]['plate_num']);
        }

        //显式指定内容类型
        /*$objActSheet->setCellValueExplicit('A5', '847475847857487584',
            PHPExcel_Cell_DataType::TYPE_STRING);*/

        //合并单元格
        /*$objActSheet->mergeCells('B1:C22');

        //分离单元格
        $objActSheet->unmergeCells('B1:C22');*/

        //*************************************
        //设置单元格样式
        //

        //设置宽度
        $objActSheet->getColumnDimension('A')->setWidth(14.5);
        $objActSheet->getColumnDimension('B')->setWidth(14.5);
        $objActSheet->getColumnDimension('C')->setWidth(14.5);
        $objActSheet->getColumnDimension('D')->setWidth(14.5);
        $objActSheet->getColumnDimension('E')->setWidth(14.5);
        $objActSheet->getColumnDimension('F')->setWidth(14.5);
        $objActSheet->getColumnDimension('G')->setWidth(14.5);
        $objActSheet->getColumnDimension('H')->setWidth(14.5);
        $objActSheet->getColumnDimension('I')->setWidth(14.5);
        $objActSheet->getColumnDimension('J')->setWidth(14.5);

        //设置单元格内容的数字格式。
        //
        //如果使用了 PHPExcel_Writer_Excel5 来生成内容的话，
        //这里需要注意，在 PHPExcel_Style_NumberFormat 类的 const 变量定义的
        //各种自定义格式化方式中，其它类型都可以正常使用，但当setFormatCode
        //为 FORMAT_NUMBER 的时候，实际出来的效果被没有把格式设置为"0"。需要
        //修改 PHPExcel_Writer_Excel5_Format 类源代码中的 getXf($style) 方法，
        //在 if ($this->_BIFF_version == 0x0500) { （第363行附近）前面增加一
        //行代码:
        //if($ifmt === '0') $ifmt = 1;
        //
        //设置格式为PHPExcel_Style_NumberFormat::FORMAT_NUMBER，避免某些大数字
        //被使用科学记数方式显示，配合下面的 setAutoSize 方法可以让每一行的内容
        //都按原始内容全部显示出来。
                /*$objStyleA5
                    ->getNumberFormat()
                    ->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_NUMBER);*/

        //设置字体
        $objStyleA = $objActSheet->getStyle('A');
        $objStyleA = $objStyleA->getFont();
        $objStyleA->setName('宋体');
        $objStyleA->setSize(10);
        $objStyleA->setBold(true);
        $objStyleA->getColor()->setARGB('FF999999');

        //设置对齐方式
        /*$objAlignA5 = $objStyleA5->getAlignment();
        $objAlignA5->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
        $objAlignA5->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

        //设置边框
        $objBorderA5 = $objStyleA5->getBorders();
        $objBorderA5->getTop()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $objBorderA5->getTop()->getColor()->setARGB('FFFF0000'); // color
        $objBorderA5->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $objBorderA5->getLeft()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $objBorderA5->getRight()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);

        //设置填充颜色
        $objFillA5 = $objStyleA5->getFill();
        $objFillA5->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
        $objFillA5->getStartColor()->setARGB('FFEEEEEE');

        //从指定的单元格复制样式信息.
        $objActSheet->duplicateStyle($objStyleA5, 'B1:C22');*/


        //*************************************
        //添加图片
        /*$objDrawing = new PHPExcel_Worksheet_Drawing();
        $objDrawing->setName('ZealImg');
        $objDrawing->setDescription('Image inserted by Zeal');
        $objDrawing->setPath('./zeali.net.logo.gif');
        $objDrawing->setHeight(36);
        $objDrawing->setCoordinates('C23');
        $objDrawing->setOffsetX(10);
        $objDrawing->setRotation(15);
        $objDrawing->getShadow()->setVisible(true);
        $objDrawing->getShadow()->setDirection(36);
        $objDrawing->setWorksheet($objActSheet);*/


        //添加一个新的worksheet
        /*$objExcel->createSheet();
        $objExcel->getSheet(1)->setTitle('测试2');

        //保护单元格
        $objExcel->getSheet(1)->getProtection()->setSheet(true);
        $objExcel->getSheet(1)->protectCells('A1:C22', 'PHPExcel');*/


        //*************************************
        //输出内容
        //

        $outputFileName = $fileName;
        // $time = date("Ymd H-i-s",time());
        // $outputFileName = $time.".xls";
        header("Content-Type: application/force-download");
        header("Content-Type: application/octet-stream");
        header("Content-Type: application/download");
        header('Content-Disposition:attachment;filename="' . $outputFileName . '"');//兼容其他浏览器到文件
        header('Content-Disposition:filename="' . $outputFileName . '"');  //兼容IE浏览器到文件
        header('Content-Disposition:inline;filename="'.$outputFileName.'"');  //到浏览器
        header("Content-Transfer-Encoding: binary");
        header("Expires: 0");
        header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
        header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
        header("Pragma: no-cache");
        $objWriter->save('./excel/'.$outputFileName);
        echo $outputFileName;
    }

    /*导出所有预约记录*/
	public function recordExportAll()
	{
        // 引入库文件
        \think\Loader::import('Excel.PHPExcel');
        \think\Loader::import('Excel.PHPExcel.IOFactory');
        
        $map['id'] = ['>' , 1];
        $epls[] = db('record')->where($map)->select();
        $epl = $epls[0];
        // print_r($epl);die();
        // 拼接文件名
        $fileName = "visitorRecord".date("Ymd-His",time()).".xls";


        $objExcel = new \PHPExcel();  // 创建一个处理对象实例
        // 创建文件格式写入对象实例, uncomment
        $objWriter = new \PHPExcel_Writer_Excel5($objExcel);   // 用于其他版本格式

        //*************************************
        //设置文档基本属性
        $objProps = $objExcel->getProperties();
        $objProps->setCreator("Zeal Li");
        $objProps->setLastModifiedBy("Zeal Li");
        $objProps->setTitle("Office XLS Test Document");
        $objProps->setSubject("Office XLS Test Document, Demo");
        $objProps->setDescription("Test document, generated by PHPExcel.");
        $objProps->setKeywords("office excel PHPExcel");
        $objProps->setCategory("Test");

        //*************************************
        //设置当前的sheet索引，用于后续的内容操作。
        //一般只有在使用多个sheet的时候才需要显示调用。
        //缺省情况下，PHPExcel会自动创建第一个sheet被设置SheetIndex=0

        $objExcel->setActiveSheetIndex(0);
        $objActSheet = $objExcel->getActiveSheet();

        //设置当前活动sheet的名称
        $objActSheet->setTitle("预约记录");

        //设置单元格首格内容
        $objActSheet->setCellValue('A1','所在公司');
        $objActSheet->setCellValue('B1','约见地址');
        $objActSheet->setCellValue('C1','访客姓名');
        $objActSheet->setCellValue('D1','员工姓名');
        $objActSheet->setCellValue('E1','来访人数');
        $objActSheet->setCellValue('F1','约见开始时间');
        $objActSheet->setCellValue('G1','约见截止时间');
        $objActSheet->setCellValue('H1','记录类型');
        $objActSheet->setCellValue('I1','约见事由');
        $objActSheet->setCellValue('J1','车牌号码');

        //  遍历访客信息数组，将数据存入对应的excel文件的每个单元格
        for($i = 0; $i < count($epl); $i++)
        {
        	// print_r($epl[$i][$i]['company']);
            $objExcel->getActiveSheet()->setCellValueExplicit('A'.($i+2),$epl[$i]['company']);
            $objExcel->getActiveSheet()->setCellValueExplicit('B'.($i+2),$epl[$i]['place']);
            $objExcel->getActiveSheet()->setCellValueExplicit('C'.($i+2),$epl[$i]['name']);
            $objExcel->getActiveSheet()->setCellValueExplicit('D'.($i+2),$epl[$i]['ename']);
            $objExcel->getActiveSheet()->setCellValueExplicit('E'.($i+2),$epl[$i]['accompanying']);
            $objExcel->getActiveSheet()->setCellValueExplicit('F'.($i+2),$epl[$i]['appointment']);
            $objExcel->getActiveSheet()->setCellValueExplicit('G'.($i+2),$epl[$i]['appointment_end']);
            $objExcel->getActiveSheet()->setCellValueExplicit('H'.($i+2),$epl[$i]['visitortype']);
            $objExcel->getActiveSheet()->setCellValueExplicit('I'.($i+2),$epl[$i]['account']);
            $objExcel->getActiveSheet()->setCellValueExplicit('J'.($i+2),$epl[$i]['plate_num']);
        }

        //显式指定内容类型
        /*$objActSheet->setCellValueExplicit('A5', '847475847857487584',
            PHPExcel_Cell_DataType::TYPE_STRING);*/

        //合并单元格
        /*$objActSheet->mergeCells('B1:C22');

        //分离单元格
        $objActSheet->unmergeCells('B1:C22');*/

        //*************************************
        //设置单元格样式
        //

        //设置宽度
        $objActSheet->getColumnDimension('A')->setWidth(14.5);
        $objActSheet->getColumnDimension('B')->setWidth(14.5);
        $objActSheet->getColumnDimension('C')->setWidth(14.5);
        $objActSheet->getColumnDimension('D')->setWidth(14.5);
        $objActSheet->getColumnDimension('E')->setWidth(14.5);
        $objActSheet->getColumnDimension('F')->setWidth(14.5);
        $objActSheet->getColumnDimension('G')->setWidth(14.5);
        $objActSheet->getColumnDimension('H')->setWidth(14.5);
        $objActSheet->getColumnDimension('I')->setWidth(14.5);
        $objActSheet->getColumnDimension('J')->setWidth(14.5);

        //设置单元格内容的数字格式。
        //
        //如果使用了 PHPExcel_Writer_Excel5 来生成内容的话，
        //这里需要注意，在 PHPExcel_Style_NumberFormat 类的 const 变量定义的
        //各种自定义格式化方式中，其它类型都可以正常使用，但当setFormatCode
        //为 FORMAT_NUMBER 的时候，实际出来的效果被没有把格式设置为"0"。需要
        //修改 PHPExcel_Writer_Excel5_Format 类源代码中的 getXf($style) 方法，
        //在 if ($this->_BIFF_version == 0x0500) { （第363行附近）前面增加一
        //行代码:
        //if($ifmt === '0') $ifmt = 1;
        //
        //设置格式为PHPExcel_Style_NumberFormat::FORMAT_NUMBER，避免某些大数字
        //被使用科学记数方式显示，配合下面的 setAutoSize 方法可以让每一行的内容
        //都按原始内容全部显示出来。
                /*$objStyleA5
                    ->getNumberFormat()
                    ->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_NUMBER);*/

        //设置字体
        $objStyleA = $objActSheet->getStyle('A');
        $objStyleA = $objStyleA->getFont();
        $objStyleA->setName('宋体');
        $objStyleA->setSize(10);
        $objStyleA->setBold(true);
        $objStyleA->getColor()->setARGB('FF999999');

        //设置对齐方式
        /*$objAlignA5 = $objStyleA5->getAlignment();
        $objAlignA5->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
        $objAlignA5->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

        //设置边框
        $objBorderA5 = $objStyleA5->getBorders();
        $objBorderA5->getTop()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $objBorderA5->getTop()->getColor()->setARGB('FFFF0000'); // color
        $objBorderA5->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $objBorderA5->getLeft()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $objBorderA5->getRight()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);

        //设置填充颜色
        $objFillA5 = $objStyleA5->getFill();
        $objFillA5->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
        $objFillA5->getStartColor()->setARGB('FFEEEEEE');

        //从指定的单元格复制样式信息.
        $objActSheet->duplicateStyle($objStyleA5, 'B1:C22');*/


        //*************************************
        //添加图片
        /*$objDrawing = new PHPExcel_Worksheet_Drawing();
        $objDrawing->setName('ZealImg');
        $objDrawing->setDescription('Image inserted by Zeal');
        $objDrawing->setPath('./zeali.net.logo.gif');
        $objDrawing->setHeight(36);
        $objDrawing->setCoordinates('C23');
        $objDrawing->setOffsetX(10);
        $objDrawing->setRotation(15);
        $objDrawing->getShadow()->setVisible(true);
        $objDrawing->getShadow()->setDirection(36);
        $objDrawing->setWorksheet($objActSheet);*/


        //添加一个新的worksheet
        /*$objExcel->createSheet();
        $objExcel->getSheet(1)->setTitle('测试2');

        //保护单元格
        $objExcel->getSheet(1)->getProtection()->setSheet(true);
        $objExcel->getSheet(1)->protectCells('A1:C22', 'PHPExcel');*/


        //*************************************
        //输出内容
        //

        $outputFileName = $fileName;
        // $time = date("Ymd H-i-s",time());
        // $outputFileName = $time.".xls";
        header("Content-Type: application/force-download");
        header("Content-Type: application/octet-stream");
        header("Content-Type: application/download");
        header('Content-Disposition:attachment;filename="' . $outputFileName . '"');//兼容其他浏览器到文件
        header('Content-Disposition:filename="' . $outputFileName . '"');  //兼容IE浏览器到文件
        header('Content-Disposition:inline;filename="'.$outputFileName.'"');  //到浏览器
        header("Content-Transfer-Encoding: binary");
        header("Expires: 0");
        header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
        header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
        header("Pragma: no-cache");
        $objWriter->save('./excel/'.$outputFileName);
        echo $outputFileName;
    }

    /*员工邀请详细记录*/
    public function recordDetail()
    {
    	$id = input('id'); 
        $record = db('record')->where('id',input('id'))->find();
        $this->assign('list',$record);
        // print_r($record);die;
        return $this->fetch();
    }
}
